// <header class='flex flex-wrap items-end w-100 pv4 ph2 ph3-t center' role='banner'>
//   <a href="{{ home_url('/') }}" class="dib brand brand--header" aria-label="{{ get_bloginfo('name', 'display') }}">
//     @svg('brand--mark', 'db')
//   </a>
//   <a href="tel:0161-442-6944" aria-label="telephone. 0 1 6 1. 4 4 2. 6 9 4 4." class="freshfield--telephone">0161 442 6944</a>
//   <a href="#content" class="screen-reader-text">Skip navigation</a>
//   <nav id="navigation" class="relative w-100 pt5 pt0-m mt3 bg-brand-primary nav-primary">
//     <div class="absolute top-0 right-0 db dn-t">
//       <button id="nav-toggle" class="flex flex-row hamburger hamburger--squeeze" type="button" aria-label="Menu" role="button" aria-controls="navigation">
//         <span class="hamburger-label mr2 white lh-copy v-top">Menu</span>
//         <span class="hamburger-box">
//           <span class="hamburger-inner"></span>
//         </span>
//       </button>
//     </div>
//     @if (has_nav_menu('primary_navigation'))
//       {!! wp_nav_menu(['theme_location' => 'primary_navigation', 'menu_id' => 'primary-nav', 'menu_class' => 'dn flex-t pa0 ma0 list primary-navigation']) !!}
//     @endif
//   </nav>
// </header>






// // plain JS slideToggle used for menu dropdowns
// // https://github.com/ericbutler555/plain-js-slidetoggle
// // const myDiv = document.querySelector('.div-to-toggle');
// // const myCallback = () => console.log('Slide finished!');
// // document.querySelector('.btn').addEventListener('click', () => slideToggle(myDiv, 1000, myCallback));
// /* eslint-disable */
// function slideToggle(t,e,o){0===t.clientHeight?j(t,e,o,!0):j(t,e,o)}function slideUp(t,e,o){j(t,e,o)}function slideDown(t,e,o){j(t,e,o,!0)}function j(t,e,o,i){void 0===e&&(e=400),void 0===i&&(i=!1),t.style.overflow='hidden',i&&(t.style.display='block');var p,l=window.getComputedStyle(t),n=parseFloat(l.getPropertyValue('height')),a=parseFloat(l.getPropertyValue('padding-top')),s=parseFloat(l.getPropertyValue('padding-bottom')),r=parseFloat(l.getPropertyValue('margin-top')),d=parseFloat(l.getPropertyValue('margin-bottom')),g=n/e,y=a/e,m=s/e,u=r/e,h=d/e;window.requestAnimationFrame(function l(x){void 0===p&&(p=x);var f=x-p;i?(t.style.height=g*f+'px',t.style.paddingTop=y*f+'px',t.style.paddingBottom=m*f+'px',t.style.marginTop=u*f+'px',t.style.marginBottom=h*f+'px'):(t.style.height=n-g*f+'px',t.style.paddingTop=a-y*f+'px',t.style.paddingBottom=s-m*f+'px',t.style.marginTop=r-u*f+'px',t.style.marginBottom=d-h*f+'px'),f>=e?(t.style.height='',t.style.paddingTop='',t.style.paddingBottom='',t.style.marginTop='',t.style.marginBottom='',t.style.overflow='',i||(t.style.display='none'),'function'==typeof o&&o()):window.requestAnimationFrame(l)})}
// /* eslint-enable */



// // vars
// const navToggle = document.getElementById('nav-toggle');
// const navPrimary = document.getElementById('primary-nav');
// let navLiHasChildren = document.querySelectorAll('#primary-nav li.menu-item-has-children');



// // closeOpenItems
// function closeOpenItems() {
//   let navLiHasChildren = document.querySelectorAll('#primary-nav li.menu-item-has-children.open');
//   navLiHasChildren.forEach(function(el) {
//     el.classList.remove('open');
//     el.firstElementChild.setAttribute('aria-expanded', 'false');
//     // el.lastElementChild.style.display = 'none';
//     el.lastElementChild.classList.remove('vis-v');
//     el.lastElementChild.classList.remove('o-100');
//     el.lastElementChild.classList.add('clip');
//   });
// }



// // event delegation
// document.addEventListener('click', function(event) {
//   // close dropdowns if click outside nav
//   if (!event.target.closest('.primary-navigation')) {
//     closeOpenItems()
//   }
//   // element click
//   // Hamburger toggle -> Nav
//   if (event.target.matches('.hamburger')) {
//     navToggle.classList.toggle('is-active');
//     // navPrimary.classList.toggle('db');
//     slideToggle(navPrimary, 150);
//   }
// });



// Array.prototype.forEach.call(navLiHasChildren, function(el){
//   // show/hide sub-menus on click
//   el.querySelector('a').addEventListener('click', function(e){

//     if (this.parentNode.classList.contains('open')) {
//       closeOpenItems()
//     } else {
//       closeOpenItems()
//       this.parentNode.classList.add('open');
//       this.setAttribute('aria-expanded', 'true');
//       // this.nextElementSibling.style.display = 'block';
//       this.nextElementSibling.classList.add('vis-v');
//       this.nextElementSibling.classList.add('o-100');
//       this.nextElementSibling.classList.remove('clip');
//     }
//     e.preventDefault();
//   });
// });






.primary-navigation {

  a,
  a:visited {

    &:not(:only-child)::after {
      padding-left: 2px;
      content: ' â–¾';
    }
  }

  .sub-menu {
    -ms-transform: translateY(32px);
    -webkit-transform: translateY(32px);
    transform: translateY(32px);
    transition: opacity .2s ease-out, visibility .2s ease-out, transform .2s ease-out;

    // fix flash of zero opacity element in first url - <script> </script> - Still occasionally appears? :/
    // https://stackoverflow.com/questions/14389566/stop-css-transition-from-firing-on-page-load

    //  extra context:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=332189
    // https://css-tricks.com/transitions-only-after-page-load/

    &::before {
      position: absolute;
      top: -4px;
      left: 16px;
      z-index: -1;
      display: block;
      width: 8px;
      height: 8px;
      background: $brand-primary;
      content: '';
      -ms-transform: rotate(45deg);
      -webkit-transform: rotate(45deg);
      transform: rotate(45deg);
    }

    li {
      min-width: 240px;
      margin-right: 0;
      margin-bottom: 1rem;
    }

    a {
      color: $white;
    }
  }

  .active {
    a {
      color: $brand-secondary;
    }
  }

  .open {
    margin-bottom: 2rem;

    a {
      margin-bottom: 0;
    }

    .sub-menu {
      -ms-transform: translateY(16px);
      -webkit-transform: translateY(16px);
      transform: translateY(16px);
    }
  }
}

@media #{$breakpoint-tablet} {

  .primary-navigation {
    display: flex !important; // required to reset nav on browser resize

    li {

      &:last-child {
        margin-right: 0;
      }
    }

    .open {
      margin-bottom: 0;

      .sub-menu {
        -ms-transform: translateY(8px);
        -webkit-transform: translateY(8px);
        transform: translateY(8px);
      }
    }

    .sub-menu {

      a {
        padding: 0;
      }
    }
  }
}

.primary-navigation .sub-menu li {

  &:last-child {
    margin-bottom: 0;
  }
}

.primary-navigation .sub-menu a {

  &:hover {
    color: $white;
    text-decoration: underline;
  }
}






// <?php

// namespace App;

// /**
//  * Class NavWalker
//  *
//  * Bootstrap 4 walker with cleaner markup for wp_nav_menu()
//  * For use with Sage >= 8.5
//  *
//  * Based on Soil NavWalker
//  * @url https://github.com/roots/soil
//  *
//  *
//  * Walker_Nav_Menu (WordPress default) example output:
//  *   <li id="menu-item-8" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8"><a href="/">Home</a></li>
//  *
//  * NavWalker example output:
//  *   <li class="nav-item menu-item menu-home"><a class="nav-link" href="/">Home</a></li>
//  *
//  * @package Roots\Sage\Nav
//  */

// class NavWalker extends \Walker_Nav_Menu {
//   /**
//    * @var bool
//    */
//   private $cpt; // Boolean, is current post a custom post type
//   /**
//    * @var false|string
//    */
//   private $archive; // Stores the archive page for current URL

//   /**
//    * NavWalker constructor.
//    */
//   public function __construct() {
//     add_filter( 'nav_menu_css_class', array( $this, 'cssClasses' ), 10, 2 );
//     add_filter( 'nav_menu_item_id', '__return_null' );
//     $cpt           = get_post_type();
//     $this->cpt     = in_array( $cpt, get_post_types( array( '_builtin' => false ) ) );
//     $this->archive = get_post_type_archive_link( $cpt );
//   }

//   /**
//    * Check item classes for current or active
//    *
//    * @param $classes
//    *
//    * @return int
//    */
//   public function checkCurrent( $classes ) {
//     return preg_match( '/(current[-_])|active/', $classes );
//   }

//   // @codingStandardsIgnoreStart

//   /**
//    * Add dropdown menu class to dropdown UL
//    *
//    * @param string $output
//    * @param int $depth
//    * @param array $args
//    */
//   function start_lvl( &$output, $depth = 0, $args = [] ) {
//     // $output .= "\n<ul class=\"static absolute-m z-9999 dn pa2 ma0 bg-white br2 shadow-1 sub-menu\" role=\"menu\">\n";
//     // $output .= "\n<ul class=\"static absolute-t o-0 vis-h pa2 ma0 bg-brand-quinary br2 shadow-1 sub-menu\" role=\"menu\">\n";
//     $output .= "\n<ul class=\"static absolute-t o-0 vis-h clip pa3 ma0 bg-brand-quinary br2 shadow-1 sub-menu\" role=\"menu\">\n";
//   }

//   /**
//    * Add required Bootstrap 4 classes to anchor links.
//    *
//    * @param string $output
//    * @param \WP_Post $item
//    * @param int $depth
//    * @param array $args
//    * @param int $id
//    */
//   function start_el( &$output, $item, $depth = 0, $args = [], $id = 0 ) {
//     $item_html = '';

//     parent::start_el( $item_html, $item, $depth, $args );

//     if ( $item->is_subitem ) {
//       $item_html = str_replace( '<a', '<a class="db pa0 pv2-t mb0 fw4 lh-solid color-brand-quinary hover-color-brand-secondary no-underline link" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"', $item_html );
//       $item_html = str_replace( '</a>', ' <b class="caret"></b></a>', $item_html );
//     } else {
//       $item_html = str_replace( '<a', '<a class="db pa0 pv2-t mb0 fw4 lh-solid color-brand-quinary hover-color-brand-secondary no-underline link"', $item_html );
//     }

//     $item_html = apply_filters( 'wp_nav_menu_item', $item_html );

//     $output .= $item_html;
//   }

//   /**
//    * Add active classes to active items & sub items
//    *
//    * @param object $element
//    * @param array $children_elements
//    * @param int $max_depth
//    * @param int $depth
//    * @param array $args
//    * @param string $output
//    */
//   public function display_element( $element, &$children_elements, $max_depth, $depth = 0, $args, &$output ) {
//     $element->is_subitem = ( ( ! empty( $children_elements[ $element->ID ] ) && ( ( $depth + 1 ) < $max_depth || ( $max_depth === 0 ) ) ) );

//     if ( $element->is_subitem ) {
//       foreach ( $children_elements[ $element->ID ] as $child ) {
//         if ( $child->current_item_parent || $this->url_compare( $this->archive, $child->url ) ) {
//           $element->classes[] = 'active';
//         }
//       }
//     }

//     $element->is_active = ( ! empty( $element->url ) && strpos( $this->archive, $element->url ) );

//     if ( $element->is_active ) {
//       $element->classes[] = 'active';
//     }

//     parent::display_element( $element, $children_elements, $max_depth, $depth, $args, $output );
//   }

//   // @codingStandardsIgnoreEnd

//   /**
//    * Clean up css classes
//    *
//    * @param $classes
//    * @param $item
//    *
//    * @return array
//    */
//   public function cssClasses( $classes, $item ) {
//     $slug = sanitize_title( $item->title );

//     // Fix core `active` behavior for custom post types
//     if ( $this->cpt ) {
//       $classes = str_replace( 'current_page_parent', '', $classes );

//       if ( $this->url_compare( $this->archive, $item->url ) ) {
//         $classes[] = 'active';
//       }
//     }

//     // Remove most core classes
//     $classes = preg_replace( '/(current(-menu-|[-_]page[-_])(item|parent|ancestor))/', 'active', $classes );
//     $classes = preg_replace( '/^((menu|page)[-_\w+]+)+/', '', $classes );

//     // Add `menu-item` class & re-add core `menu-item` class
//     $classes[] = 'relative db pa0 ma0 mr0 mr4-t mb3 mb0-t';

//     // Add `dropdown` class & re-add core `menu-item-has-children` class on parent elements
//     if ( $item->is_subitem ) {
//       $classes[] = 'dropdown menu-item-has-children';
//     }

//     // Add `menu-<slug>` class
//     $classes[] = 'menu-' . $slug;

//     $classes = array_unique( $classes );
//     $classes = array_map( 'trim', $classes );

//     return array_filter( $classes );
//   }

//   /**
//    * Make a URL relative
//    *
//    * Utility function, from soil
//    * @url https://github.com/roots/soil
//    *
//    * @param $input
//    *
//    * @return string
//    */
//   public function root_relative_url( $input ) {
//     if ( is_feed() ) {
//       return $input;
//     }
//     $url = parse_url( $input );
//     if ( ! isset( $url['host'] ) || ! isset( $url['path'] ) ) {
//       return $input;
//     }
//     $site_url = parse_url( network_home_url() );  // falls back to home_url
//     if ( ! isset( $url['scheme'] ) ) {
//       $url['scheme'] = $site_url['scheme'];
//     }
//     $hosts_match   = $site_url['host'] === $url['host'];
//     $schemes_match = $site_url['scheme'] === $url['scheme'];
//     $ports_exist   = isset( $site_url['port'] ) && isset( $url['port'] );
//     $ports_match   = ( $ports_exist ) ? $site_url['port'] === $url['port'] : true;
//     if ( $hosts_match && $schemes_match && $ports_match ) {
//       return wp_make_link_relative( $input );
//     }

//     return $input;
//   }

//   /**
//    * Compare URL against relative URL
//    *
//    * Utility function, from Soil
//    * @url https://github.com/roots/soil
//    *
//    * @param $url
//    * @param $rel
//    *
//    * @return bool
//    */
//   public function url_compare( $url, $rel ) {
//     $url = trailingslashit( $url );
//     $rel = trailingslashit( $rel );

//     return ( ( strcasecmp( $url, $rel ) === 0 ) || $this->root_relative_url( $url ) == $rel );
//   }

// }

// /**
//  * Clean up wp_nav_menu_args
//  *
//  * Remove the container
//  * Remove the id="" on nav menu items
//  *
//  * @param string $args
//  *
//  * @return array
//  */
// function nav_menu_args( $args = '' ) {
//   $nav_menu_args              = [];
//   $nav_menu_args['container'] = false;


//     if ( is_array($args) && !$args['items_wrap'] ) {
//       $nav_menu_args['items_wrap'] = '<ul class="%2$s">%3$s</ul>';
//     }

//     if ( ! $args['walker'] ) {
//       $nav_menu_args['walker'] = new NavWalker();
//     }



//   return array_merge( $args, $nav_menu_args );
// }

// add_filter( 'wp_nav_menu_args', __NAMESPACE__ . '\\nav_menu_args' );
// add_filter( 'nav_menu_item_id', '__return_null' );
